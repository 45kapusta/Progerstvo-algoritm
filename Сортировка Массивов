import time

def read_array_from_file(filename):
    with open(filename, 'r') as file:
        array = [int(num) for num in file.read().split() if num.isdigit()]
    return array


def bubble_sort(arr):
    n = len(arr)
    for i in range(n-1):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]


def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j >=0 and key < arr[j] :
                arr[j+1] = arr[j]
                j -= 1
        arr[j+1] = key


def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr)//2
        L = arr[:mid]
        R = arr[mid:]

        merge_sort(L)
        merge_sort(R)

        i = j = k = 0

        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                arr[k] = L[i]
                i += 1
            else:
                arr[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            arr[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            arr[k] = R[j]
            j += 1
            k += 1


def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less = [x for x in arr[1:] if x <= pivot]
        greater = [x for x in arr[1:] if x > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)


def counting_sort(arr):
    if not arr:
        return

    output = [0] * (max(arr) + 1)
    count = [0] * (max(arr) + 1)
    for i in arr:
        count[i] += 1
    for i in range(1, len(count)):
        count[i] += count[i - 1]
    for i in range(len(arr)):
        output[count[arr[i]] - 1] = arr[i]
        count[arr[i]] -= 1
    for i in range(len(arr)):
        arr[i] = output[i]


def measure_time(sort_function, array):
    start_time = time.time()
    sort_function(array)
    end_time = time.time()
    return end_time - start_time

if __name__ == "__main__":
    array = read_array_from_file("mas.txt")


    bubble_time = measure_time(bubble_sort, array.copy())
    insertion_time = measure_time(insertion_sort, array.copy())
    merge_time = measure_time(merge_sort, array.copy())
    quick_time = measure_time(quick_sort, array.copy())
    counting_time = measure_time(counting_sort, array.copy())


    print("Время выполнения сортировки пузырьком: {:.6f} сек".format(bubble_time))
    print("Время выполнения сортировки вставками: {:.6f} сек".format(insertion_time))
    print("Время выполнения сортировки слиянием: {:.6f} сек".format(merge_time))
    print("Время выполнения быстрой сортировки: {:.6f} сек".format(quick_time))
    print("Время выполнения сортировки подсчётом: {:.6f} сек".format(counting_time))


    #
